[{"/home/tgim4253/node/daegeon/src/index.js":"1","/home/tgim4253/node/daegeon/src/myBase.js":"2","/home/tgim4253/node/daegeon/src/components/App.js":"3","/home/tgim4253/node/daegeon/src/routes/Home.js":"4","/home/tgim4253/node/daegeon/src/components/Router.js":"5","/home/tgim4253/node/daegeon/src/routes/Auth.js":"6"},{"size":247,"mtime":1629788206000,"results":"7","hashOfConfig":"8"},{"size":618,"mtime":1630039443063,"results":"9","hashOfConfig":"8"},{"size":906,"mtime":1630047882646,"results":"10","hashOfConfig":"8"},{"size":1491,"mtime":1630029233066,"results":"11","hashOfConfig":"8"},{"size":873,"mtime":1630047969355,"results":"12","hashOfConfig":"8"},{"size":10053,"mtime":1630047592447,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},"n87xox",{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"17"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"17"},"/home/tgim4253/node/daegeon/src/index.js",["30"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport myBase from \"./myBase\"\n\n//test\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n",["31","32"],"/home/tgim4253/node/daegeon/src/myBase.js",[],"/home/tgim4253/node/daegeon/src/components/App.js",["33"],"/home/tgim4253/node/daegeon/src/routes/Home.js",["34","35"],"import { dbService } from \"../myBase\";\nimport React, { useEffect, useState } from \"react\";\n\nexport default ({ userObj }) => {\n  //작성중인 twit\n  const [name, setName] = useState(\"\");\n  //저장된 twit들\n  const [password, setPassword] = useState(\"\");\n\tconst [birthday, setBirthday] = useState(\"\");\n \n  const onSubmit = async (event) => {\n    event.preventDefault();\n    //컬렉션에 추가(객체)\n    await dbService.collection(\"users\").doc(name+\"\").set({\n\t \tname:name,\n      password: password,\n      birthday: birthday,\n    });\n\t }\n\n  const onChangeName = (event) => {\n    //event.target의 value를 value로\n    const { target: { value } } = event;\n    setName(value);\n  }\n  const onChangePassword = (event) => {\n    //event.target의 value를 value로\n    const { target: { value } } = event;\n    setPassword(value);\n  }\n  const onChangeBirthday = (event) => {\n    //event.target의 value를 value로\n    const { target: { value } } = event;\n    setBirthday(value);\n  }\n  return (\n    <div>\n      <form onSubmit={onSubmit}>\n        <input value={name} onChange={onChangeName} type=\"text\" placeholder=\"이름\" minLength={4} maxLength={4} />\n\t\t  <input value={birthday} onChange={onChangeBirthday} type=\"text\" placeholder=\"생년월일(6자리)\" minLength={6} maxLength={6} />\n\t\t  <input value={password} onChange={onChangePassword} type=\"text\" placeholder=\"비밀번호\" minLength={4} maxLength={4} />\n        <input type=\"submit\" value=\"save\" />\n      </form>\n    </div >\n  )\n}","/home/tgim4253/node/daegeon/src/components/Router.js",["36","37"],"/home/tgim4253/node/daegeon/src/routes/Auth.js",["38","39","40","41","42","43","44","45","46","47","48","49","50","51"],"import { authService } from \"../myBase\";\nimport React, { useState } from \"react\";\nimport \"../css/Auth.css\"\n\n\n\n\nexport default () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isLogIn,setIsLogIn] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  \n  const toResister = () => setIsLogIn((prev)=>!prev)\n  \n  \n  const checkLogIn = () => {\n  if(isLogIn)\n  \treturn;\n  \t const form = document.login_form;\n\t const inform ={\n\t \t\"email\": \"tgim4253@pess.cnehs.kr\",\n\t\t\"code\":\"1234\" \n\t }\n    const chkPw = checkValidPassword(form);\n\t const chkEmail = form.email.value === inform.email;\n\t const chkCode = form.confirm_code.value === inform.code;\n\t let chkPw2 = checkValidPassword2(form);\n\t \n\n\n\tif (chkEmail) {\n        document.getElementById('alert_email').innerText = \"\";\n        form.email.style.border = '2px solid';\n        form.email.style.borderColor = '#00D000';\n    } else {\n        form.email.style.border = '2px solid';\n        form.email.style.borderColor = '#FF0000';\n        document.getElementById('alert_email').style.color = '#FF0000';\n    }\n    \n\n    if (chkPw) {\n        document.getElementById('alert_password').innerText = \"\";\n        form.password.style.border = '2px solid';\n        form.password.style.borderColor = '#00D000';\n    } else {\n        form.password.style.border = '2px solid';\n        form.password.style.borderColor = '#FF0000';\n        document.getElementById('alert_password').style.color = '#FF0000';\n    }\n\t if (chkCode) {\n        document.getElementById('alert_code').innerText = \"\";\n        form.confirm_code.style.border = '2px solid';\n        form.confirm_code.style.borderColor = '#00D000';\n    } else {\n        form.confirm_code.style.border = '2px solid';\n        form.confirm_code.style.borderColor = '#FF0000';\n        document.getElementById('alert_code').style.color = '#FF0000';\n    }\n    if (chkPw2) {\n        document.getElementById('alert_password2').innerText = \"\";\n        form.password2.style.border = '2px solid';\n        form.password2.style.borderColor = '#00D000';\n    } else {\n        form.password2.style.border = '2px solid';\n        form.password2.style.borderColor = '#FF0000';\n        document.getElementById('alert_password2').style.color = '#FF0000';\n    }\n    return(chkEmail && chkPw && chkPw2 && chkCode)\n  }\n  \n  \nfunction checkValidPassword(form) {\n    if (form.password.value == \"\") {\n        document.getElementById('alert_password').innerText = \"Please enter password.\";\n        //form.password.focus();\n        return false;\n    }\n\n    const pw = form.password.value;\n    // String.prototype.search() :: 검색된 문자열 중에 첫 번째로 매치되는 것의 인덱스를 반환한다. 찾지 못하면 -1 을 반환한다.\n    // number\n    const num = pw.search(/[0-9]/g);\n    // alphabet\n    const eng = pw.search(/[a-z]/ig);\n    // special characters\n    const spe = pw.search(/[`~!@@#$%^&*|₩₩₩'₩\";:₩/?]/gi);\n\n    if (pw.length < 6) {\n        // 최소 6문자.\n        document.getElementById('alert_password').innerText = \"Password must be at least 6 characters.\";\n        return false;\n    } else if (pw.search(/\\s/) != -1) {\n        // 공백 제거.\n        document.getElementById('alert_password').innerText = \"Please enter your password without spaces.\";\n        return false;\n    } else if (num < 0 && eng < 0 && spe < 0) {\n        // 한글과 같은 문자열 입력 방지.\n        document.getElementById('alert_password').innerText = \"Password is not valid.\";\n        return false;\n    }\n\n    return true;\n}\n\nfunction checkValidPassword2(form) {\n    if (form.password2.value == \"\") {\n        document.getElementById('alert_password2').innerText = \"Password2 is required.\";\n        //form.password.focus();\n        return false;\n    }\n\n    if (form.password.value !== form.password2.value) {\n        document.getElementById('alert_password2').innerText = \"Password and password2 is not match.\";\n        form.password.style.border = '2px solid';\n        form.password.style.borderColor = '#FF0000';\n        document.getElementById('alert_password').style.color = '#FF0000';\n        return false;\n    }\n\n    return true;\n}\n  \n  \n  return (\n    <div id=\"container\" className=\"main_container\">\n\t\t  {isLogIn?(<Login resister={toResister} checkLogIn={checkLogIn}/>):(<Resister resister={toResister} checkLogIn={checkLogIn}/>)}\n                \n            </div>\n  )\n}\n\n\n\n\nconst Resister = ({resister, checkLogIn}) => {\n\n\nconst onSubmit = async (event) => {\n    event.preventDefault();\n\t   \t const form = document.login_form;\n\tconst email = form.email.value;\n\tconst password = form.password.value;\n\t if(checkLogIn()){\n\t let data;\n\t\t try {\n        data = await authService.createUserWithEmailAndPassword(email, password);\n    } catch (error) {\n      console.log(error.message);\n    }\n\t }\n  }\n\n return(\n <>\n \t<div style={{padding:\" 30p\"}}></div>\n                <form name=\"login_form\" action=\"/cookie\" method=\"get\">\n                    \n                    <div className=\"form_title_div\">\n                        <p className=\"form_title_p\">회원가입</p>\n                    </div>\n                    \n                     <div>\n                        <div>\n                            <input type=\"text\" name=\"confirm_code\" placeholder=\"인증 코드\" className=\"re-form_input\"/>\n                        </div>\n                        <div className=\"form_text_alert_padding\">\n                            <div id=\"alert_code\" className=\"form_text_alert\"></div>\n                        </div>\n                    </div>\n                    \n                    <div>\n                        <div>\n                            <input type=\"text\" name=\"email\" placeholder=\"아이디\" className=\"re-form_input\"/>\n                        </div>\n                        <div className=\"form_text_alert_padding\">\n                            <div id=\"alert_email\" className=\"form_text_alert\"></div>\n                        </div>\n                    </div>\n                    \n                    <div>\n                        <div>\n                            <input type=\"password\" name=\"password\" placeholder=\"비밀번호\" className=\"re-form_input\" />\n                        </div>\n                        <div className=\"form_text_alert_padding\">\n                            <div id=\"alert_password\" className=\"form_text_alert\"></div>\n                        </div>\n                    </div>\n                    <div>\n                        <div>\n                            <input type=\"password\" name=\"password2\" placeholder=\"비밀번호 재입력\" className=\"re-form_input\" />\n                        </div>\n                        <div className=\"form_text_alert_padding\">\n                            <div id=\"alert_password2\" className=\"form_text_alert\"></div>\n                        </div>\n                    </div>\n                    \n                    <div style={{height: \"10px\"}}></div>\n                    <div>\n                        <button type=\"button\" className=\"form_submitregister_button\" onClick={onSubmit}>회원가입</button>\n                    </div>\n                    <div style={{height: \"10px\"}}></div>\n\t\t\t\t\t\t  <div>\n                        <button type=\"button\" className=\"form_register_button\" onClick={resister}>로그인</button>\n                    </div>\n                </form>\n\t\t\t\t\t </>\n )\n}\n\n\n\nconst Login = ({resister,checkLogIn}) => {\n\tconst [id, setId] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n\tconst onSubmit = async (event) => {\n    event.preventDefault();\n    let data;\n    try {\n      let data;\n      data = await authService.signInWithEmailAndPassword(id, password);\n    } catch (error) {\n      console.log(error.message);\n      setError(error.message);\n    }\n  }\n  \n  const onChange = (event) => {\n    const { target: { name, value } } = event;\n    if (name === \"email\") {\n      setId(value)\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  }\n\n\treturn(\n\t<>\n        <div style={{padding: \"70px\"}}></div>\n\t\t<form name=\"login_form\" submit={onSubmit}>\n                    \n                    <div className=\"form_title_div\">\n                        <p className=\"form_title_p\">로그인</p>\n                    </div>\n                    \n                    <div>\n                        <div>\n                            <input type=\"text\" name=\"email\" value={id} placeholder=\"아이디\" className=\"form_input\" onChange={onChange}/>\n                        </div>\n                        <div className=\"form_text_alert_paddings\">\n                            <div id=\"alert_email\" className=\"form_text_alert\"></div>\n                        </div>\n                    </div>\n                    \n                    <div>\n                        <div>\n                            <input type=\"password\" name=\"password\" value={password} placeholder=\"비밀번호\" className=\"form_input\" onChange={onChange}/>\n                        </div>\n                        <div className=\"form_text_alert_padding\">\n                            <div id=\"alert_password\" className=\"form_text_alert\"></div>\n                        </div>\n                    </div>\n                    \n                    <div style={{height: \"10px\"}}></div>\n                    <div>\n                        <button type=\"button\" className=\"form_submit_button\" onClick={onSubmit}>로그인</button>\n                    </div>\n                    \n                    <div style={{height: \"10px\"}}></div>\n                    <div>\n                        <button type=\"button\" className=\"form_register_button\" onClick={resister}>회원가입</button>\n                    </div>\n                    \n                    <div style={{height: \"10px\"}}></div>\n                    <div>\n                        <button type=\"button\" className=\"form_findpasswd_button\" >비밀번호 찾기</button>\n                    </div>\n                    \n                </form>\n\t\t</>)\n}",{"ruleId":"52","severity":1,"message":"53","line":4,"column":8,"nodeType":"54","messageId":"55","endLine":4,"endColumn":14},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"52","severity":1,"message":"60","line":3,"column":23,"nodeType":"54","messageId":"55","endLine":3,"endColumn":32},{"ruleId":"52","severity":1,"message":"61","line":2,"column":17,"nodeType":"54","messageId":"55","endLine":2,"endColumn":26},{"ruleId":"62","severity":1,"message":"63","line":4,"column":1,"nodeType":"64","endLine":46,"endColumn":2},{"ruleId":"52","severity":1,"message":"65","line":9,"column":11,"nodeType":"54","messageId":"55","endLine":9,"endColumn":19},{"ruleId":"52","severity":1,"message":"66","line":11,"column":9,"nodeType":"54","messageId":"55","endLine":11,"endColumn":21},{"ruleId":"62","severity":1,"message":"63","line":8,"column":1,"nodeType":"64","endLine":133,"endColumn":2},{"ruleId":"52","severity":1,"message":"67","line":9,"column":10,"nodeType":"54","messageId":"55","endLine":9,"endColumn":15},{"ruleId":"52","severity":1,"message":"68","line":9,"column":17,"nodeType":"54","messageId":"55","endLine":9,"endColumn":25},{"ruleId":"52","severity":1,"message":"69","line":10,"column":10,"nodeType":"54","messageId":"55","endLine":10,"endColumn":18},{"ruleId":"52","severity":1,"message":"70","line":10,"column":20,"nodeType":"54","messageId":"55","endLine":10,"endColumn":31},{"ruleId":"52","severity":1,"message":"71","line":12,"column":10,"nodeType":"54","messageId":"55","endLine":12,"endColumn":15},{"ruleId":"52","severity":1,"message":"72","line":12,"column":17,"nodeType":"54","messageId":"55","endLine":12,"endColumn":25},{"ruleId":"73","severity":1,"message":"74","line":76,"column":29,"nodeType":"75","messageId":"76","endLine":76,"endColumn":31},{"ruleId":"73","severity":1,"message":"77","line":95,"column":32,"nodeType":"75","messageId":"76","endLine":95,"endColumn":34},{"ruleId":"73","severity":1,"message":"74","line":109,"column":30,"nodeType":"75","messageId":"76","endLine":109,"endColumn":32},{"ruleId":"52","severity":1,"message":"78","line":149,"column":9,"nodeType":"54","messageId":"55","endLine":149,"endColumn":13},{"ruleId":"52","severity":1,"message":"71","line":218,"column":10,"nodeType":"54","messageId":"55","endLine":218,"endColumn":15},{"ruleId":"52","severity":1,"message":"79","line":222,"column":9,"nodeType":"54","messageId":"55","endLine":222,"endColumn":13},{"ruleId":"52","severity":1,"message":"78","line":225,"column":7,"nodeType":"54","messageId":"55","endLine":225,"endColumn":11},"no-unused-vars","'myBase' is defined but never used.","Identifier","unusedVar","no-native-reassign",["80"],"no-negated-in-lhs",["81"],"'dbService' is defined but never used.","'useEffect' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'loggedId' is assigned a value but never used.","'loggedChange' is assigned a value but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'data' is assigned a value but never used.","'data' is defined but never used.","no-global-assign","no-unsafe-negation"]