{"ast":null,"code":"var _jsxFileName = \"/home/tgim4253/node/daegeon/src/components/Router.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { HashRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\nimport Auth from \"../routes/Auth\";\nimport CreateRoom from \"../routes/CreateRoom\";\nimport Room from \"../routes/Room\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AppRouter = ({\n  isLoggedIn,\n  userObj\n}) => {\n  _s();\n\n  const [loggedId, setLoggedId] = useState(\"\");\n\n  const loggedChange = id => setLoggedId(id);\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: isLoggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(CreateRoom, {\n            loggedChange: loggedChange,\n            loggedId: loggedId,\n            userObj: userObj,\n            createComplete: roomName => {\n              enterRoom(roomName);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: `/${roomId}`,\n          children: /*#__PURE__*/_jsxDEV(Room, {\n            userObj: userObj,\n            roomId: roomId,\n            leaveR: leaveRoom\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), isEnter ? /*#__PURE__*/_jsxDEV(Redirect, {\n          from: \"/\",\n          to: `/${roomId}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 16\n        }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n          from: \"*\",\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 56\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/login\",\n          children: /*#__PURE__*/_jsxDEV(Auth, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n          from: \"*\",\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AppRouter, \"DCydhV6ZaZk9GzkofZhv+oVjfyA=\");\n\n_c = AppRouter;\nexport default AppRouter;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppRouter\");","map":{"version":3,"sources":["/home/tgim4253/node/daegeon/src/components/Router.js"],"names":["React","useState","HashRouter","Router","Redirect","Route","Switch","Auth","CreateRoom","Room","AppRouter","isLoggedIn","userObj","loggedId","setLoggedId","loggedChange","id","roomName","enterRoom","roomId","leaveRoom","isEnter"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAU,IAAIC,MAAvB,EAA+BC,QAA/B,EAAyCC,KAAzC,EAAgDC,MAAhD,QAA8D,kBAA9D;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;;;;AAIA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAD,KAA6B;AAAA;;AAC5C,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAyBb,QAAQ,CAAC,EAAD,CAAvC;;AAED,QAAMc,YAAY,GAAIC,EAAD,IAAQF,WAAW,CAACE,EAAD,CAAxC;;AAGA,sBACE,QAAC,MAAD;AAAA,2BAEE,QAAC,MAAD;AAAA,gBACGL,UAAU,gBACT;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAA,iCACE,QAAC,UAAD;AAAY,YAAA,YAAY,EAAEI,YAA1B;AACR,YAAA,QAAQ,EAAEF,QADF;AAER,YAAA,OAAO,EAAED,OAFD;AAEU,YAAA,cAAc,EAAGK,QAAD,IAAY;AAACC,cAAAA,SAAS,CAACD,QAAD,CAAT;AAAoB;AAF3D;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAG,IAAGE,MAAO,EAA9B;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,OAAO,EAAEP,OAAf;AAAwB,YAAA,MAAM,EAAEO,MAAhC;AAAwC,YAAA,MAAM,EAAEC;AAAhD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAPF,EAULC,OAAO,gBAAG,QAAC,QAAD;AAAU,UAAA,IAAI,EAAC,GAAf;AAAmB,UAAA,EAAE,EAAG,IAAGF,MAAO;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAAH,gBAA2C,QAAC,QAAD;AAAU,UAAA,IAAI,EAAC,GAAf;AAAmB,UAAA,EAAE,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,gBAV7C;AAAA,sBADS,gBAaP;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,QAAlB;AAAA,iCACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,QAAD;AAAU,UAAA,IAAI,EAAC,GAAf;AAAmB,UAAA,EAAE,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAdN;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD,CAlCD;;GAAMT,S;;KAAAA,S;AAoCN,eAAeA,SAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { HashRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\nimport Auth from \"../routes/Auth\";\nimport CreateRoom from \"../routes/CreateRoom\";\nimport Room from \"../routes/Room\";\n\n\n\nconst AppRouter = ({ isLoggedIn, userObj }) => {\n   const [loggedId,setLoggedId] = useState(\"\")\n\t\n  const loggedChange = (id) => setLoggedId(id)\n  \n  \n  return (\n    <Router>\n      {/* isLoggedIn이 참이라면 뒤의 문장 실행 */}\n      <Switch>\n        {isLoggedIn ? (\n          <>\n            <Route exact path=\"/\">\n              <CreateRoom loggedChange={loggedChange} \n\t\t\t\t  loggedId={loggedId}\n\t\t\t\t  userObj={userObj} createComplete={(roomName)=>{enterRoom(roomName)}}\n\t\t\t\t  />\n            </Route>\n            <Route exact path={`/${roomId}`}>\n              <Room userObj={userObj} roomId={roomId} leaveR={leaveRoom}/>\n            </Route>\n\t\t\t\t{isEnter ? <Redirect from=\"/\" to={`/${roomId}`} />:<Redirect from=\"*\" to=\"/\" />}\n          </>) : (\n            <>\n              <Route exact path=\"/login\">\n                <Auth />\n              </Route>\n              <Redirect from=\"*\" to=\"/login\" />\n            </>\n          )\n        }\n      </Switch>\n    </Router>\n  )\n}\n\nexport default AppRouter;"]},"metadata":{},"sourceType":"module"}