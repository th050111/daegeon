{"ast":null,"code":"var _jsxFileName = \"/home/tgim4253/node/daegeon/src/routes/Auth.js\",\n    _s = $RefreshSig$();\n\nimport { authService } from \"../myBase\";\nimport React, { useState } from \"react\";\nimport \"../css/Auth.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _s(() => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const onChange = event => {\n    const {\n      target: {\n        name,\n        value\n      }\n    } = event;\n\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async event => {\n    event.preventDefault();\n    let data;\n\n    try {\n      let data;\n\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(email, password);\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n\n      ;\n      console.log(data);\n    } catch (error) {\n      console.log(error.message);\n      setError(error.message);\n    }\n  };\n\n  const toggleAccount = () => setNewAccount(prev => !prev);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-ground\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"login-form\",\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"email\",\n            type: \"text\",\n            placeholder: \"Email\",\n            required: true,\n            value: email,\n            onChange: onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"password\",\n            type: \"password\",\n            placeholder: \"Password\",\n            required: true,\n            value: password,\n            onChange: onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"login-button\",\n          type: \"submit\",\n          value: newAccount ? \"Sign In\" : \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"create-toggle\",\n        onClick: toggleAccount,\n        children: !newAccount ? \"Sign in\" : \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}, \"PzQQNDqROVuSUwGcld31eLJW8SE=\");","map":{"version":3,"sources":["/home/tgim4253/node/daegeon/src/routes/Auth.js"],"names":["authService","React","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","preventDefault","data","createUserWithEmailAndPassword","signInWithEmailAndPassword","console","log","message","toggleAccount","prev"],"mappings":"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","sourcesContent":["import { authService } from \"../myBase\";\nimport React, { useState } from \"react\";\nimport \"../css/Auth.css\"\n\nexport default () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const onChange = (event) => {\n    const { target: { name, value } } = event;\n    if (name === \"email\") {\n      setEmail(value)\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  }\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    let data;\n    try {\n      let data;\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(\n          email, password\n        );\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      };\n      console.log(data);\n    } catch (error) {\n      console.log(error.message);\n      setError(error.message);\n    }\n  }\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n\n  return (\n    <div className=\"login-ground\">\n      <div className=\"login-input\">\n        <form className=\"login-form\" onSubmit={onSubmit}>\n          <div className=\"input\">\n\t\t\t\t<input name=\"email\" type=\"text\" placeholder=\"Email\" required value={email} onChange={onChange} />\n            <input name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange} />\n          </div>\n          <input className=\"login-button\" type=\"submit\" value={newAccount ? \"Sign In\" : \"Log In\"} />\n        </form>\n        <span className=\"create-toggle\" onClick={toggleAccount}>{!newAccount ? \"Sign in\" : \"Log In\"}</span>\n        {error}\n      </div>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}