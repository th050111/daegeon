{"ast":null,"code":"var _jsxFileName = \"/home/tgim4253/node/daegeon/src/components/Router.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { HashRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\nimport Auth from \"../routes/Auth\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AppRouter = ({\n  isLoggedIn,\n  userObj\n}) => {\n  _s();\n\n  const [loggedId, setLoggedId] = useState(\"\");\n\n  const loggedChange = id => setLoggedId(id);\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: isLoggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/login\",\n          children: /*#__PURE__*/_jsxDEV(Auth, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n          from: \"*\",\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AppRouter, \"DCydhV6ZaZk9GzkofZhv+oVjfyA=\");\n\n_c = AppRouter;\nexport default AppRouter;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppRouter\");","map":{"version":3,"sources":["/home/tgim4253/node/daegeon/src/components/Router.js"],"names":["React","useState","HashRouter","Router","Redirect","Route","Switch","Auth","AppRouter","isLoggedIn","userObj","loggedId","setLoggedId","loggedChange","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAU,IAAIC,MAAvB,EAA+BC,QAA/B,EAAyCC,KAAzC,EAAgDC,MAAhD,QAA8D,kBAA9D;AACA,OAAOC,IAAP,MAAiB,gBAAjB;;;;AAIA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAD,KAA6B;AAAA;;AAC5C,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAyBX,QAAQ,CAAC,EAAD,CAAvC;;AAED,QAAMY,YAAY,GAAIC,EAAD,IAAQF,WAAW,CAACE,EAAD,CAAxC;;AAGA,sBACE,QAAC,MAAD;AAAA,2BAEE,QAAC,MAAD;AAAA,gBACGL,UAAU,gBACT,qCADS,gBAGP;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,QAAlB;AAAA,iCACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,QAAD;AAAU,UAAA,IAAI,EAAC,GAAf;AAAmB,UAAA,EAAE,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAJN;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAxBD;;GAAMD,S;;KAAAA,S;AA0BN,eAAeA,SAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { HashRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\nimport Auth from \"../routes/Auth\";\n\n\n\nconst AppRouter = ({ isLoggedIn, userObj }) => {\n   const [loggedId,setLoggedId] = useState(\"\")\n\t\n  const loggedChange = (id) => setLoggedId(id)\n  \n  \n  return (\n    <Router>\n      {/* isLoggedIn이 참이라면 뒤의 문장 실행 */}\n      <Switch>\n        {isLoggedIn ? (\n          <>\n          </>) : (\n            <>\n              <Route exact path=\"/login\">\n                <Auth />\n              </Route>\n              <Redirect from=\"*\" to=\"/login\" />\n            </>\n          )\n        }\n      </Switch>\n    </Router>\n  )\n}\n\nexport default AppRouter;"]},"metadata":{},"sourceType":"module"}