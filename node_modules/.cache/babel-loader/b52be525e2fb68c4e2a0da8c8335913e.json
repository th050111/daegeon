{"ast":null,"code":"import _slicedToArray from\"/home/tgim4253/node/daegeon/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import AppRouter from\"./Router\";import{authService,dbService}from\"../myBase\";// App component\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function App(){//auth가 초기화?\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),init=_useState2[0],setInit=_useState2[1];//login?\nvar _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isLoggedIn=_useState4[0],setIsLoggedIn=_useState4[1];//user 정보 객체\nvar _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),userObj=_useState6[0],setUserObj=_useState6[1];//useEffect: didmoun+\nuseEffect(function(){//auth관련 변경 이벤트 리스너, 리스너 등록 직후 호출\nauthService.onAuthStateChanged(function(user){console.log(user);if(user){setIsLoggedIn(true);setUserObj(user);}else{setIsLoggedIn(false);}//초기화:true\nsetInit(true);});},[]);return/*#__PURE__*/_jsx(_Fragment,{children:init?/*#__PURE__*/_jsx(AppRouter,{isLoggedIn:isLoggedIn,userObj:userObj}):\"Initializing...\"});}export default App;","map":{"version":3,"sources":["/home/tgim4253/node/daegeon/src/components/App.js"],"names":["React","useEffect","useState","AppRouter","authService","dbService","App","init","setInit","isLoggedIn","setIsLoggedIn","userObj","setUserObj","onAuthStateChanged","user","console","log"],"mappings":"kJAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,SAAP,KAAsB,UAAtB,CACA,OAASC,WAAT,CAAsBC,SAAtB,KAAuC,WAAvC,CAEA;gGACA,QAASC,CAAAA,GAAT,EAAe,CACb;AACA,cAAwBJ,QAAQ,CAAC,KAAD,CAAhC,wCAAOK,IAAP,eAAaC,OAAb,eACA;AACA,eAAoCN,QAAQ,CAAC,KAAD,CAA5C,yCAAOO,UAAP,eAAmBC,aAAnB,eACA;AACA,eAA8BR,QAAQ,CAAC,IAAD,CAAtC,yCAAOS,OAAP,eAAgBC,UAAhB,eAGA;AACAX,SAAS,CAAC,UAAM,CACd;AACAG,WAAW,CAACS,kBAAZ,CAA+B,SAACC,IAAD,CAAU,CAC1CC,OAAO,CAACC,GAAR,CAAYF,IAAZ,EACG,GAAIA,IAAJ,CAAU,CACRJ,aAAa,CAAC,IAAD,CAAb,CACAE,UAAU,CAACE,IAAD,CAAV,CACD,CAHD,IAGO,CACLJ,aAAa,CAAC,KAAD,CAAb,CACD,CACD;AACAF,OAAO,CAAC,IAAD,CAAP,CACD,CAVD,EAWD,CAbQ,CAaN,EAbM,CAAT,CAeA,mBACE,yBACKD,IAAI,cAAG,KAAC,SAAD,EAAW,UAAU,CAAEE,UAAvB,CAAmC,OAAO,CAAEE,OAA5C,EAAH,CAA6D,iBADtE,EADF,CAKD,CAED,cAAeL,CAAAA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"./Router\";\nimport { authService, dbService } from \"../myBase\";\n\n// App component\nfunction App() {\n  //auth가 초기화?\n  const [init, setInit] = useState(false);\n  //login?\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  //user 정보 객체\n  const [userObj, setUserObj] = useState(null);\n  \n  \n  //useEffect: didmoun+\n  useEffect(() => {\n    //auth관련 변경 이벤트 리스너, 리스너 등록 직후 호출\n    authService.onAuthStateChanged((user) => {\n\t \tconsole.log(user)\n      if (user) {\n        setIsLoggedIn(true);\n        setUserObj(user);\n      } else {\n        setIsLoggedIn(false);\n      }\n      //초기화:true\n      setInit(true);\n    });\n  }, [])\n  \n  return (\n    <>\n        {init ? <AppRouter isLoggedIn={isLoggedIn} userObj={userObj} /> : \"Initializing...\"}\n    </>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}