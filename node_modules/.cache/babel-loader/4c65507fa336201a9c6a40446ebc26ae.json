{"ast":null,"code":"var _jsxFileName = \"/home/tgim4253/node/daegeon/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport AppRouter from \"./Router\";\nimport { authService, dbService } from \"../myBase\"; // App component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //auth가 초기화?\n  const [init, setInit] = useState(false); //login?\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false); //user 정보 객체\n\n  const [userObj, setUserObj] = useState(null); //useEffect: didmoun+\n\n  useEffect(() => {\n    //auth관련 변경 이벤트 리스너, 리스너 등록 직후 호출\n    authService.onAuthStateChanged(user => {\n      if (user) {\n        setIsLoggedIn(true);\n        setUserObj(user);\n      } else {\n        setIsLoggedIn(false);\n      } //초기화:true\n\n\n      setInit(true);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: init ? /*#__PURE__*/_jsxDEV(AppRouter, {\n      isLoggedIn: isLoggedIn,\n      userObj: userObj\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this) : \"Initializing...\"\n  }, void 0, false);\n}\n\n_s(App, \"+8UWPZeDHvBWUbvjuGH9aya/3CQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/tgim4253/node/daegeon/src/components/App.js"],"names":["React","useEffect","useState","AppRouter","authService","dbService","App","init","setInit","isLoggedIn","setIsLoggedIn","userObj","setUserObj","onAuthStateChanged","user"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,UAAtB;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,WAAvC,C,CAEA;;;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,KAAD,CAAhC,CAFa,CAGb;;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,KAAD,CAA5C,CAJa,CAKb;;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC,CANa,CASb;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd;AACAG,IAAAA,WAAW,CAACS,kBAAZ,CAAgCC,IAAD,IAAU;AACvC,UAAIA,IAAJ,EAAU;AACRJ,QAAAA,aAAa,CAAC,IAAD,CAAb;AACAE,QAAAA,UAAU,CAACE,IAAD,CAAV;AACD,OAHD,MAGO;AACLJ,QAAAA,aAAa,CAAC,KAAD,CAAb;AACD,OANsC,CAOvC;;;AACAF,MAAAA,OAAO,CAAC,IAAD,CAAP;AACD,KATD;AAUD,GAZQ,EAYN,EAZM,CAAT;AAcA,sBACE;AAAA,cACKD,IAAI,gBAAG,QAAC,SAAD;AAAW,MAAA,UAAU,EAAEE,UAAvB;AAAmC,MAAA,OAAO,EAAEE;AAA5C;AAAA;AAAA;AAAA;AAAA,YAAH,GAA6D;AADtE,mBADF;AAKD;;GA7BQL,G;;KAAAA,G;AA+BT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"./Router\";\nimport { authService, dbService } from \"../myBase\";\n\n// App component\nfunction App() {\n  //auth가 초기화?\n  const [init, setInit] = useState(false);\n  //login?\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  //user 정보 객체\n  const [userObj, setUserObj] = useState(null);\n  \n  \n  //useEffect: didmoun+\n  useEffect(() => {\n    //auth관련 변경 이벤트 리스너, 리스너 등록 직후 호출\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoggedIn(true);\n        setUserObj(user);\n      } else {\n        setIsLoggedIn(false);\n      }\n      //초기화:true\n      setInit(true);\n    });\n  }, [])\n  \n  return (\n    <>\n        {init ? <AppRouter isLoggedIn={isLoggedIn} userObj={userObj} /> : \"Initializing...\"}\n    </>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}