{"version":3,"sources":["myBase.js","routes/Auth.js","routes/Home.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apps","length","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","auth","dbService","firestore","useState","isLogIn","setIsLogIn","toResister","prev","checkLogIn","form","document","login_form","inform","chkPw","password","value","getElementById","innerText","pw","num","search","eng","spe","checkValidPassword","chkEmail","email","chkCode","confirm_code","chkPw2","password2","style","border","borderColor","color","checkValidPassword2","id","className","resister","Resister","onSubmit","event","a","preventDefault","createUserWithEmailAndPassword","console","log","message","padding","name","action","method","type","placeholder","height","onClick","Login","setId","setPassword","setError","signInWithEmailAndPassword","onChange","target","submit","userObj","setName","birthday","setBirthday","collection","doc","set","minLength","maxLength","AppRouter","isLoggedIn","exact","path","Home","from","to","App","init","setInit","setIsLoggedIn","setUserObj","useEffect","onAuthStateChanged","user","ReactDOM","render","StrictMode"],"mappings":"iOAcKA,IAASC,KAAKC,OAGjBF,IAASG,MAFTH,IAASI,cAXY,CACrBC,OAAQ,0CACRC,WAAY,gCACZC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,eACnBC,MAAO,8CAUF,IAAMC,EAAcX,IAASY,OACvBC,EAAYb,IAASc,Y,eCdnB,aACb,MAA0BC,mBAAS,IAAnC,mBACA,GADA,UACgCA,mBAAS,KAAzC,mBACA,GADA,UAC6BA,oBAAS,IAAtC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA0BF,mBAAS,IAAnC,mBAGMG,GAHN,UAGmB,kBAAMD,GAAW,SAACE,GAAD,OAASA,OAGvCC,EAAa,WACnB,IAAGJ,EAAH,CAEE,IAAMK,EAAOC,SAASC,WAClBC,EACI,yBADJA,EAEC,OAECC,EAiDV,SAA4BJ,GACxB,GAA2B,IAAvBA,EAAKK,SAASC,MAGd,OAFAL,SAASM,eAAe,kBAAkBC,UAAY,0BAE/C,EAGX,IAAMC,EAAKT,EAAKK,SAASC,MAGnBI,EAAMD,EAAGE,OAAO,UAEhBC,EAAMH,EAAGE,OAAO,WAEhBE,EAAMJ,EAAGE,OAAO,wDAEtB,GAAIF,EAAG5B,OAAS,EAGZ,OADAoB,SAASM,eAAe,kBAAkBC,UAAY,2CAC/C,EACJ,IAAwB,GAApBC,EAAGE,OAAO,MAGjB,OADAV,SAASM,eAAe,kBAAkBC,UAAY,8CAC/C,EACJ,GAAIE,EAAM,GAAKE,EAAM,GAAKC,EAAM,EAGnC,OADAZ,SAASM,eAAe,kBAAkBC,UAAY,0BAC/C,EAGX,OAAO,EA/EOM,CAAmBd,GAC7Be,EAAWf,EAAKgB,MAAMV,QAAUH,EAChCc,EAAUjB,EAAKkB,aAAaZ,QAAUH,EACxCgB,EA+EN,SAA6BnB,GACzB,GAA4B,IAAxBA,EAAKoB,UAAUd,MAGf,OAFAL,SAASM,eAAe,mBAAmBC,UAAY,0BAEhD,EAGX,GAAIR,EAAKK,SAASC,QAAUN,EAAKoB,UAAUd,MAKvC,OAJAL,SAASM,eAAe,mBAAmBC,UAAY,uCACvDR,EAAKK,SAASgB,MAAMC,OAAS,YAC7BtB,EAAKK,SAASgB,MAAME,YAAc,UAClCtB,SAASM,eAAe,kBAAkBc,MAAMG,MAAQ,WACjD,EAGX,OAAO,EA9FIC,CAAoBzB,GA0C/B,OAtCCe,GACGd,SAASM,eAAe,eAAeC,UAAY,GACnDR,EAAKgB,MAAMK,MAAMC,OAAS,YAC1BtB,EAAKgB,MAAMK,MAAME,YAAc,YAE/BvB,EAAKgB,MAAMK,MAAMC,OAAS,YAC1BtB,EAAKgB,MAAMK,MAAME,YAAc,UAC/BtB,SAASM,eAAe,eAAec,MAAMG,MAAQ,WAIrDpB,GACAH,SAASM,eAAe,kBAAkBC,UAAY,GACtDR,EAAKK,SAASgB,MAAMC,OAAS,YAC7BtB,EAAKK,SAASgB,MAAME,YAAc,YAElCvB,EAAKK,SAASgB,MAAMC,OAAS,YAC7BtB,EAAKK,SAASgB,MAAME,YAAc,UAClCtB,SAASM,eAAe,kBAAkBc,MAAMG,MAAQ,WAE1DP,GACEhB,SAASM,eAAe,cAAcC,UAAY,GAClDR,EAAKkB,aAAaG,MAAMC,OAAS,YACjCtB,EAAKkB,aAAaG,MAAME,YAAc,YAEtCvB,EAAKkB,aAAaG,MAAMC,OAAS,YACjCtB,EAAKkB,aAAaG,MAAME,YAAc,UACtCtB,SAASM,eAAe,cAAcc,MAAMG,MAAQ,WAEpDL,GACAlB,SAASM,eAAe,mBAAmBC,UAAY,GACvDR,EAAKoB,UAAUC,MAAMC,OAAS,YAC9BtB,EAAKoB,UAAUC,MAAME,YAAc,YAEnCvB,EAAKoB,UAAUC,MAAMC,OAAS,YAC9BtB,EAAKoB,UAAUC,MAAME,YAAc,UACnCtB,SAASM,eAAe,mBAAmBc,MAAMG,MAAQ,WAEtDT,GAAYX,GAASe,GAAUF,IAwDxC,OACE,qBAAKS,GAAG,YAAYC,UAAU,iBAA9B,SACChC,EAAS,cAAC,EAAD,CAAOiC,SAAU/B,EAAYE,WAAYA,IAAgB,cAAC,EAAD,CAAU6B,SAAU/B,EAAYE,WAAYA,OAS7G8B,EAAW,SAAC,GAA4B,IAA3BD,EAA0B,EAA1BA,SAAU7B,EAAgB,EAAhBA,WAGvB+B,EAAQ,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,yDACbD,EAAME,iBACEjC,EAAOC,SAASC,WACrBc,EAAQhB,EAAKgB,MAAMV,MACnBD,EAAWL,EAAKK,SAASC,OAC3BP,IALY,0CAQIT,EAAY4C,+BAA+BlB,EAAOX,GARtD,gEAUX8B,QAAQC,IAAI,KAAMC,SAVP,0DAAH,sDAeb,OACA,qCACC,qBAAKhB,MAAO,CAACiB,QAAQ,UACP,uBAAMC,KAAK,aAAaC,OAAO,UAAUC,OAAO,MAAhD,UAEI,qBAAKd,UAAU,iBAAf,SACI,mBAAGA,UAAU,eAAb,wCAGH,gCACG,8BACI,uBAAOe,KAAK,OAAOH,KAAK,eAAeI,YAAY,4BAAQhB,UAAU,oBAEzE,qBAAKA,UAAU,0BAAf,SACI,qBAAKD,GAAG,aAAaC,UAAU,yBAIvC,gCACI,8BACI,uBAAOe,KAAK,OAAOH,KAAK,QAAQI,YAAY,qBAAMhB,UAAU,oBAEhE,qBAAKA,UAAU,0BAAf,SACI,qBAAKD,GAAG,cAAcC,UAAU,yBAIxC,gCACI,8BACI,uBAAOe,KAAK,WAAWH,KAAK,WAAWI,YAAY,2BAAOhB,UAAU,oBAExE,qBAAKA,UAAU,0BAAf,SACI,qBAAKD,GAAG,iBAAiBC,UAAU,yBAG3C,gCACI,8BACI,uBAAOe,KAAK,WAAWH,KAAK,YAAYI,YAAY,8CAAWhB,UAAU,oBAE7E,qBAAKA,UAAU,0BAAf,SACI,qBAAKD,GAAG,kBAAkBC,UAAU,yBAI5C,qBAAKN,MAAO,CAACuB,OAAQ,UACrB,8BACI,wBAAQF,KAAK,SAASf,UAAU,6BAA6BkB,QAASf,EAAtE,wCAEJ,qBAAKT,MAAO,CAACuB,OAAQ,UACjC,8BACgB,wBAAQF,KAAK,SAASf,UAAU,uBAAuBkB,QAASjB,EAAhE,yCASlBkB,EAAQ,SAAC,GAA2B,IAA1BlB,EAAyB,EAAzBA,SACf,GADwC,EAAhB7B,WACJL,mBAAS,KAA7B,mBAAOgC,EAAP,KAAWqB,EAAX,KACC,EAAgCrD,mBAAS,IAAzC,mBAAOW,EAAP,KAAiB2C,EAAjB,KACA,EAA0BtD,mBAAS,IAAnC,mBAAcuD,GAAd,WAEKnB,EAAQ,uCAAG,WAAOC,GAAP,SAAAC,EAAA,6DACdD,EAAME,iBADQ,kBAKC3C,EAAY4D,2BAA2BxB,EAAIrB,GAL5C,8DAOZ8B,QAAQC,IAAI,KAAMC,SAClBY,EAAS,KAAMZ,SARH,yDAAH,sDAYPc,EAAW,SAACpB,GAChB,MAAoCA,EAA5BqB,OAAUb,EAAlB,EAAkBA,KAAMjC,EAAxB,EAAwBA,MACX,UAATiC,EACFQ,EAAMzC,GACY,aAATiC,GACTS,EAAY1C,IAIjB,OACA,qCACO,qBAAKe,MAAO,CAACiB,QAAS,UAC5B,uBAAMC,KAAK,aAAac,OAAQvB,EAAhC,UAEkB,qBAAKH,UAAU,iBAAf,SACI,mBAAGA,UAAU,eAAb,kCAGJ,gCACI,8BACI,uBAAOe,KAAK,OAAOH,KAAK,QAAQjC,MAAOoB,EAAIiB,YAAY,qBAAMhB,UAAU,aAAawB,SAAUA,MAElG,qBAAKxB,UAAU,2BAAf,SACI,qBAAKD,GAAG,cAAcC,UAAU,yBAIxC,gCACI,8BACI,uBAAOe,KAAK,WAAWH,KAAK,WAAWjC,MAAOD,EAAUsC,YAAY,2BAAOhB,UAAU,aAAawB,SAAUA,MAEhH,qBAAKxB,UAAU,0BAAf,SACI,qBAAKD,GAAG,iBAAiBC,UAAU,yBAI3C,qBAAKN,MAAO,CAACuB,OAAQ,UACrB,8BACI,wBAAQF,KAAK,SAASf,UAAU,qBAAqBkB,QAASf,EAA9D,kCAGJ,qBAAKT,MAAO,CAACuB,OAAQ,UACrB,8BACI,wBAAQF,KAAK,SAASf,UAAU,uBAAuBkB,QAASjB,EAAhE,wCAGJ,qBAAKP,MAAO,CAACuB,OAAQ,UACrB,8BACI,wBAAQF,KAAK,SAASf,UAAU,yBAAhC,4DCpRT,cAAiB,EAAd2B,QAAe,IAE/B,EAAwB5D,mBAAS,IAAjC,mBAAO6C,EAAP,KAAagB,EAAb,KAEA,EAAgC7D,mBAAS,IAAzC,mBAAOW,EAAP,KAAiB2C,EAAjB,KACD,EAAgCtD,mBAAS,IAAzC,mBAAO8D,EAAP,KAAiBC,EAAjB,KAEO3B,EAAQ,uCAAG,WAAOC,GAAP,SAAAC,EAAA,6DACfD,EAAME,iBADS,SAGTzC,EAAUkE,WAAW,SAASC,IAAIpB,EAAK,IAAIqB,IAAI,CACtDrB,KAAKA,EACFlC,SAAUA,EACVmD,SAAUA,IANG,2CAAH,sDAyBd,OACE,8BACE,uBAAM1B,SAAUA,EAAhB,UACE,uBAAOxB,MAAOiC,EAAMY,SAlBL,SAACpB,GAEpB,IAAkBzB,EAAYyB,EAAtBqB,OAAU9C,MAClBiD,EAAQjD,IAewCoC,KAAK,OAAOC,YAAY,eAAKkB,UAAW,EAAGC,UAAW,IACtG,uBAAOxD,MAAOkD,EAAUL,SATD,SAACpB,GAExB,IAAkBzB,EAAYyB,EAAtBqB,OAAU9C,MAClBmD,EAAYnD,IAMwCoC,KAAK,OAAOC,YAAY,0CAAYkB,UAAW,EAAGC,UAAW,IACjH,uBAAOxD,MAAOD,EAAU8C,SAfD,SAACpB,GAExB,IAAkBzB,EAAYyB,EAAtBqB,OAAU9C,MAClB0C,EAAY1C,IAYwCoC,KAAK,OAAOC,YAAY,2BAAOkB,UAAW,EAAGC,UAAW,IACxG,uBAAOpB,KAAK,SAASpC,MAAM,eCJpByD,EA9BG,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,WAClB,GAD4C,EAAdV,QACC5D,mBAAS,KAAxC,6BAKD,OACE,cAAC,IAAD,UAEE,cAAC,IAAD,UACGsE,EACL,qCACA,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,QAAlB,SACY,cAACC,EAAD,MAEN,cAAC,IAAD,CAAUC,KAAK,IAAIC,GAAG,aAEpB,qCACE,cAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,SAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAUE,KAAK,IAAIC,GAAG,mBCSrBC,MAhCf,WAEE,MAAwB5E,oBAAS,GAAjC,mBAAO6E,EAAP,KAAaC,EAAb,KAEA,EAAoC9E,oBAAS,GAA7C,mBAAOsE,EAAP,KAAmBS,EAAnB,KAEA,EAA8B/E,mBAAS,MAAvC,mBAAO4D,EAAP,KAAgBoB,EAAhB,KAmBA,OAfAC,qBAAU,WAERrF,EAAYsF,oBAAmB,SAACC,GACjC1C,QAAQC,IAAIyC,GACLA,GACFJ,GAAc,GACdC,EAAWG,IAEXJ,GAAc,GAGhBD,GAAQ,QAET,IAGD,mCACKD,EAAO,cAAC,EAAD,CAAWP,WAAYA,EAAYV,QAASA,IAAc,qBC1B1EwB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF/E,SAASM,eAAe,W","file":"static/js/main.cfed13a8.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCrOCesdnW3CHzx882crvCcqbOLQraEQqo\",\n  authDomain: \"daegeon-afe27.firebaseapp.com\",\n  projectId: \"daegeon-afe27\",\n  storageBucket: \"daegeon-afe27.appspot.com\",\n  messagingSenderId: \"431730133479\",\n  appId: \"1:431730133479:web:9048d58080a4cce9631542\"\n};\n\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n} else {\n  firebase.app(); // if already initialized, use that one\n}\n\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();","import { authService } from \"../myBase\";\nimport React, { useState } from \"react\";\nimport \"../css/Auth.css\"\n\n\n\n\nexport default () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isLogIn,setIsLogIn] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  \n  const toResister = () => setIsLogIn((prev)=>!prev)\n  \n  \n  const checkLogIn = () => {\n  if(isLogIn)\n  \treturn;\n  \t const form = document.login_form;\n\t const inform ={\n\t \t\"email\": \"tgim4253@pess.cnehs.kr\",\n\t\t\"code\":\"1234\" \n\t }\n    const chkPw = checkValidPassword(form);\n\t const chkEmail = form.email.value === inform.email;\n\t const chkCode = form.confirm_code.value === inform.code;\n\t let chkPw2 = checkValidPassword2(form);\n\t \n\n\n\tif (chkEmail) {\n        document.getElementById('alert_email').innerText = \"\";\n        form.email.style.border = '2px solid';\n        form.email.style.borderColor = '#00D000';\n    } else {\n        form.email.style.border = '2px solid';\n        form.email.style.borderColor = '#FF0000';\n        document.getElementById('alert_email').style.color = '#FF0000';\n    }\n    \n\n    if (chkPw) {\n        document.getElementById('alert_password').innerText = \"\";\n        form.password.style.border = '2px solid';\n        form.password.style.borderColor = '#00D000';\n    } else {\n        form.password.style.border = '2px solid';\n        form.password.style.borderColor = '#FF0000';\n        document.getElementById('alert_password').style.color = '#FF0000';\n    }\n\t if (chkCode) {\n        document.getElementById('alert_code').innerText = \"\";\n        form.confirm_code.style.border = '2px solid';\n        form.confirm_code.style.borderColor = '#00D000';\n    } else {\n        form.confirm_code.style.border = '2px solid';\n        form.confirm_code.style.borderColor = '#FF0000';\n        document.getElementById('alert_code').style.color = '#FF0000';\n    }\n    if (chkPw2) {\n        document.getElementById('alert_password2').innerText = \"\";\n        form.password2.style.border = '2px solid';\n        form.password2.style.borderColor = '#00D000';\n    } else {\n        form.password2.style.border = '2px solid';\n        form.password2.style.borderColor = '#FF0000';\n        document.getElementById('alert_password2').style.color = '#FF0000';\n    }\n    return(chkEmail && chkPw && chkPw2 && chkCode)\n  }\n  \n  \nfunction checkValidPassword(form) {\n    if (form.password.value == \"\") {\n        document.getElementById('alert_password').innerText = \"Please enter password.\";\n        //form.password.focus();\n        return false;\n    }\n\n    const pw = form.password.value;\n    // String.prototype.search() :: 검색된 문자열 중에 첫 번째로 매치되는 것의 인덱스를 반환한다. 찾지 못하면 -1 을 반환한다.\n    // number\n    const num = pw.search(/[0-9]/g);\n    // alphabet\n    const eng = pw.search(/[a-z]/ig);\n    // special characters\n    const spe = pw.search(/[`~!@@#$%^&*|₩₩₩'₩\";:₩/?]/gi);\n\n    if (pw.length < 6) {\n        // 최소 6문자.\n        document.getElementById('alert_password').innerText = \"Password must be at least 6 characters.\";\n        return false;\n    } else if (pw.search(/\\s/) != -1) {\n        // 공백 제거.\n        document.getElementById('alert_password').innerText = \"Please enter your password without spaces.\";\n        return false;\n    } else if (num < 0 && eng < 0 && spe < 0) {\n        // 한글과 같은 문자열 입력 방지.\n        document.getElementById('alert_password').innerText = \"Password is not valid.\";\n        return false;\n    }\n\n    return true;\n}\n\nfunction checkValidPassword2(form) {\n    if (form.password2.value == \"\") {\n        document.getElementById('alert_password2').innerText = \"Password2 is required.\";\n        //form.password.focus();\n        return false;\n    }\n\n    if (form.password.value !== form.password2.value) {\n        document.getElementById('alert_password2').innerText = \"Password and password2 is not match.\";\n        form.password.style.border = '2px solid';\n        form.password.style.borderColor = '#FF0000';\n        document.getElementById('alert_password').style.color = '#FF0000';\n        return false;\n    }\n\n    return true;\n}\n  \n  \n  return (\n    <div id=\"container\" className=\"main_container\">\n\t\t  {isLogIn?(<Login resister={toResister} checkLogIn={checkLogIn}/>):(<Resister resister={toResister} checkLogIn={checkLogIn}/>)}\n                \n            </div>\n  )\n}\n\n\n\n\nconst Resister = ({resister, checkLogIn}) => {\n\n\nconst onSubmit = async (event) => {\n    event.preventDefault();\n\t   \t const form = document.login_form;\n\tconst email = form.email.value;\n\tconst password = form.password.value;\n\t if(checkLogIn()){\n\t let data;\n\t\t try {\n        data = await authService.createUserWithEmailAndPassword(email, password);\n    } catch (error) {\n      console.log(error.message);\n    }\n\t }\n  }\n\n return(\n <>\n \t<div style={{padding:\" 30p\"}}></div>\n                <form name=\"login_form\" action=\"/cookie\" method=\"get\">\n                    \n                    <div className=\"form_title_div\">\n                        <p className=\"form_title_p\">회원가입</p>\n                    </div>\n                    \n                     <div>\n                        <div>\n                            <input type=\"text\" name=\"confirm_code\" placeholder=\"인증 코드\" className=\"re-form_input\"/>\n                        </div>\n                        <div className=\"form_text_alert_padding\">\n                            <div id=\"alert_code\" className=\"form_text_alert\"></div>\n                        </div>\n                    </div>\n                    \n                    <div>\n                        <div>\n                            <input type=\"text\" name=\"email\" placeholder=\"아이디\" className=\"re-form_input\"/>\n                        </div>\n                        <div className=\"form_text_alert_padding\">\n                            <div id=\"alert_email\" className=\"form_text_alert\"></div>\n                        </div>\n                    </div>\n                    \n                    <div>\n                        <div>\n                            <input type=\"password\" name=\"password\" placeholder=\"비밀번호\" className=\"re-form_input\" />\n                        </div>\n                        <div className=\"form_text_alert_padding\">\n                            <div id=\"alert_password\" className=\"form_text_alert\"></div>\n                        </div>\n                    </div>\n                    <div>\n                        <div>\n                            <input type=\"password\" name=\"password2\" placeholder=\"비밀번호 재입력\" className=\"re-form_input\" />\n                        </div>\n                        <div className=\"form_text_alert_padding\">\n                            <div id=\"alert_password2\" className=\"form_text_alert\"></div>\n                        </div>\n                    </div>\n                    \n                    <div style={{height: \"10px\"}}></div>\n                    <div>\n                        <button type=\"button\" className=\"form_submitregister_button\" onClick={onSubmit}>회원가입</button>\n                    </div>\n                    <div style={{height: \"10px\"}}></div>\n\t\t\t\t\t\t  <div>\n                        <button type=\"button\" className=\"form_register_button\" onClick={resister}>로그인</button>\n                    </div>\n                </form>\n\t\t\t\t\t </>\n )\n}\n\n\n\nconst Login = ({resister,checkLogIn}) => {\n\tconst [id, setId] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n\tconst onSubmit = async (event) => {\n    event.preventDefault();\n    let data;\n    try {\n      let data;\n      data = await authService.signInWithEmailAndPassword(id, password);\n    } catch (error) {\n      console.log(error.message);\n      setError(error.message);\n    }\n  }\n  \n  const onChange = (event) => {\n    const { target: { name, value } } = event;\n    if (name === \"email\") {\n      setId(value)\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  }\n\n\treturn(\n\t<>\n        <div style={{padding: \"70px\"}}></div>\n\t\t<form name=\"login_form\" submit={onSubmit}>\n                    \n                    <div className=\"form_title_div\">\n                        <p className=\"form_title_p\">로그인</p>\n                    </div>\n                    \n                    <div>\n                        <div>\n                            <input type=\"text\" name=\"email\" value={id} placeholder=\"아이디\" className=\"form_input\" onChange={onChange}/>\n                        </div>\n                        <div className=\"form_text_alert_paddings\">\n                            <div id=\"alert_email\" className=\"form_text_alert\"></div>\n                        </div>\n                    </div>\n                    \n                    <div>\n                        <div>\n                            <input type=\"password\" name=\"password\" value={password} placeholder=\"비밀번호\" className=\"form_input\" onChange={onChange}/>\n                        </div>\n                        <div className=\"form_text_alert_padding\">\n                            <div id=\"alert_password\" className=\"form_text_alert\"></div>\n                        </div>\n                    </div>\n                    \n                    <div style={{height: \"10px\"}}></div>\n                    <div>\n                        <button type=\"button\" className=\"form_submit_button\" onClick={onSubmit}>로그인</button>\n                    </div>\n                    \n                    <div style={{height: \"10px\"}}></div>\n                    <div>\n                        <button type=\"button\" className=\"form_register_button\" onClick={resister}>회원가입</button>\n                    </div>\n                    \n                    <div style={{height: \"10px\"}}></div>\n                    <div>\n                        <button type=\"button\" className=\"form_findpasswd_button\" >비밀번호 찾기</button>\n                    </div>\n                    \n                </form>\n\t\t</>)\n}","import { dbService } from \"../myBase\";\nimport React, { useEffect, useState } from \"react\";\n\nexport default ({ userObj }) => {\n  //작성중인 twit\n  const [name, setName] = useState(\"\");\n  //저장된 twit들\n  const [password, setPassword] = useState(\"\");\n\tconst [birthday, setBirthday] = useState(\"\");\n \n  const onSubmit = async (event) => {\n    event.preventDefault();\n    //컬렉션에 추가(객체)\n    await dbService.collection(\"users\").doc(name+\"\").set({\n\t \tname:name,\n      password: password,\n      birthday: birthday,\n    });\n\t }\n\n  const onChangeName = (event) => {\n    //event.target의 value를 value로\n    const { target: { value } } = event;\n    setName(value);\n  }\n  const onChangePassword = (event) => {\n    //event.target의 value를 value로\n    const { target: { value } } = event;\n    setPassword(value);\n  }\n  const onChangeBirthday = (event) => {\n    //event.target의 value를 value로\n    const { target: { value } } = event;\n    setBirthday(value);\n  }\n  return (\n    <div>\n      <form onSubmit={onSubmit}>\n        <input value={name} onChange={onChangeName} type=\"text\" placeholder=\"이름\" minLength={4} maxLength={4} />\n\t\t  <input value={birthday} onChange={onChangeBirthday} type=\"text\" placeholder=\"생년월일(6자리)\" minLength={6} maxLength={6} />\n\t\t  <input value={password} onChange={onChangePassword} type=\"text\" placeholder=\"비밀번호\" minLength={4} maxLength={4} />\n        <input type=\"submit\" value=\"save\" />\n      </form>\n    </div >\n  )\n}","import React, { useState } from \"react\";\nimport { HashRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\n\n\n\nconst AppRouter = ({ isLoggedIn, userObj }) => {\n   const [loggedId,setLoggedId] = useState(\"\")\n\t\n  const loggedChange = (id) => setLoggedId(id)\n  \n  \n  return (\n    <Router>\n      {/* isLoggedIn이 참이라면 뒤의 문장 실행 */}\n      <Switch>\n        {isLoggedIn ? (\n\t\t  <>\n\t\t  <Route exact path=\"/home\">\n                <Home />\n              </Route>\n          <Redirect from=\"*\" to=\"/home\" />\n          </>) : (\n            <>\n              <Route exact path=\"/login\">\n                <Auth />\n              </Route>\n              <Redirect from=\"*\" to=\"/login\" />\n            </>\n          )\n        }\n      </Switch>\n    </Router>\n  )\n}\n\nexport default AppRouter;","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"./Router\";\nimport { authService, dbService } from \"../myBase\";\n\n// App component\nfunction App() {\n  //auth가 초기화?\n  const [init, setInit] = useState(false);\n  //login?\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  //user 정보 객체\n  const [userObj, setUserObj] = useState(null);\n  \n  \n  //useEffect: didmoun+\n  useEffect(() => {\n    //auth관련 변경 이벤트 리스너, 리스너 등록 직후 호출\n    authService.onAuthStateChanged((user) => {\n\t \tconsole.log(user)\n      if (user) {\n        setIsLoggedIn(true);\n        setUserObj(user);\n      } else {\n        setIsLoggedIn(false);\n      }\n      //초기화:true\n      setInit(true);\n    });\n  }, [])\n  \n  return (\n    <>\n        {init ? <AppRouter isLoggedIn={isLoggedIn} userObj={userObj} /> : \"Initializing...\"}\n    </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport myBase from \"./myBase\"\n\n//test\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}